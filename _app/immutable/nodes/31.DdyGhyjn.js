import{s as u,e as m,a as d,c as p,g as f,d as _,i as c,n as $,f as r}from"../chunks/scheduler.BHcsbfKa.js";import{S as g,i as x,c as h,a as v,m as C,t as W,b,d as k}from"../chunks/index.CiegshHD.js";import{Q as w}from"../chunks/Question.CEwWq2c3.js";function q(i){let e,s="Effective width of dedicated walking/wheeling spaces.",t,n,o="Mode: Walking / Wheeling";return{c(){e=m("p"),e.textContent=s,t=d(),n=m("p"),n.textContent=o},l(a){e=p(a,"P",{"data-svelte-h":!0}),f(e)!=="svelte-1ukpbjn"&&(e.textContent=s),t=_(a),n=p(a,"P",{"data-svelte-h":!0}),f(n)!=="svelte-1bs6336"&&(n.textContent=o)},m(a,l){c(a,e,l),c(a,t,l),c(a,n,l)},p:$,d(a){a&&(r(e),r(t),r(n))}}}function P(i){let e,s;return e=new w({props:{idx:7,label:"Width of Walking and Wheeling Spaces",cases:[["0","<1.5m."],["1","1.5-2m."],["2",">2m."]],$$slots:{default:[q]},$$scope:{ctx:i}}}),{c(){h(e.$$.fragment)},l(t){v(e.$$.fragment,t)},m(t,n){C(e,t,n),s=!0},p(t,[n]){const o={};n&1&&(o.$$scope={dirty:n,ctx:t}),e.$set(o)},i(t){s||(W(e.$$.fragment,t),s=!0)},o(t){b(e.$$.fragment,t),s=!1},d(t){k(e,t)}}}class y extends g{constructor(e){super(),x(this,e,null,P,u,{})}}export{y as component};
