var h=Object.defineProperty;var d=(l,e,t)=>e in l?h(l,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):l[e]=t;var s=(l,e,t)=>(d(l,typeof e!="symbol"?e+"":e,t),t);import{G as f}from"./scheduler.DYUcsWQI.js";import"./index.ADnkt-Ju.js";import"./paths.Db3ZDZPS.js";/* empty css                                                       */class m{constructor(e,t,i,n,a){s(this,"prefix");s(this,"emptyState");s(this,"validate");s(this,"state");s(this,"currentFile");this.prefix=e,this.emptyState=t,this.validate=i,this.state=n,this.currentFile=a,this.initialLoad(),this.state.subscribe(o=>{let r=f(this.currentFile);r&&window.localStorage.setItem(this.key(r),JSON.stringify(o))}),this.currentFile.subscribe(o=>{o&&window.localStorage.setItem(this.key("last-opened-file"),o)})}key(e){return`${this.prefix}${e}`}loadFile(e){console.log(`Loading ${e}`);let t=window.localStorage.getItem(this.key(e));if(!t)throw new Error(`Key not in local storage: ${e}`);let i=JSON.parse(t);return this.validate(i),i}newFilename(){let e=this.getFileList();for(let t=1;t<=e.length+1;t++){let i=`untitled${t}`;if(!e.includes(i))return i}throw new Error("Couldn't make a new filename; this shouldn't be possible")}getFileList(){let e=[];for(let t=0;t<window.localStorage.length;t++){let i=window.localStorage.key(t);i.startsWith(this.prefix)&&i!=this.key("last-opened-file")&&e.push(i.slice(this.prefix.length))}return e.sort(),e}saveAndGetFileList(e,t){return window.localStorage.setItem(this.key(e),JSON.stringify(t)),this.getFileList()}initialLoad(){if(typeof window>"u"){console.log("Running outside of a browser, in test mode -- not loading from local storage");return}console.log("Initial load; trying to open last opened file");let e=window.localStorage.getItem(this.key("last-opened-file"));if(e)try{let i=this.loadFile(e);this.currentFile.set(e),this.state.set(i);return}catch(i){window.alert(`The last opened file ${e} has a problem: ${i}`)}console.log("Starting with a new file");let t=this.newFilename();this.currentFile.set(t),this.state.set(this.emptyState())}}export{m as L};
