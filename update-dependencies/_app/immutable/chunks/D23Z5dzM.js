import{s as X,l as Y,r as q,d as w,u as Z,m as x,o as ee,v as I,i as se,b as u,p as A,w as te,c as B,e as G,g as D,h as H,j as E,k as oe}from"./hklQk-fT.js";import{S as ne,i as ie,e as F,d as Q,t as v,a as V,m as j,c as R,b as T}from"./4RGf_tlt.js";import"./Dvzm5Msn.js";import"./PJuiTqEn.js";import{F as ae}from"./yyPm3s9P.js";import{P as K}from"./CnpJjvpN.js";import"./ClOBj-_p.js";import"./DhBaF9mu.js";import{s as L}from"./DaC397qr.js";import{s as y}from"./Dl4p0PjW.js";import{P as re}from"./Bl6Br4b0.js";function ce(s){let i,g,o,_,r,n,f,k,c,h,P,$,t,N,d,m;o=new re({props:{currentIdx:s[0]}}),n=new K({props:{idx:s[0],total:26,urlPath:"route_check/street_placemaking_check/sp"}});const z=s[5].default,l=Y(z,s,s[4],null);function M(e){s[6](e)}function O(e){s[7](e)}function U(e){s[8](e)}function W(e){s[9](e)}let C={choices:s[2]};return s[1].streetPlacemakingCheck.existingScores[s[0]-1]!==void 0&&(C.existingValue=s[1].streetPlacemakingCheck.existingScores[s[0]-1]),s[1].streetPlacemakingCheck.proposedScores[s[0]-1]!==void 0&&(C.proposedValue=s[1].streetPlacemakingCheck.proposedScores[s[0]-1]),s[1].streetPlacemakingCheck.existingScoreNotes[s[0]-1]!==void 0&&(C.existingNotes=s[1].streetPlacemakingCheck.existingScoreNotes[s[0]-1]),s[1].streetPlacemakingCheck.proposedScoreNotes[s[0]-1]!==void 0&&(C.proposedNotes=s[1].streetPlacemakingCheck.proposedScoreNotes[s[0]-1]),c=new ae({props:C}),q.push(()=>F(c,"existingValue",M)),q.push(()=>F(c,"proposedValue",O)),q.push(()=>F(c,"existingNotes",U)),q.push(()=>F(c,"proposedNotes",W)),d=new K({props:{idx:s[0],total:26,urlPath:"route_check/street_placemaking_check/sp"}}),{c(){i=H("div"),g=H("div"),T(o.$$.fragment),_=E(),r=H("div"),T(n.$$.fragment),f=E(),l&&l.c(),k=E(),T(c.$$.fragment),N=E(),T(d.$$.fragment),this.h()},l(e){i=B(e,"DIV",{class:!0,style:!0});var a=G(i);g=B(a,"DIV",{class:!0});var S=G(g);R(o.$$.fragment,S),S.forEach(w),_=D(a),r=B(a,"DIV",{class:!0});var p=G(r);R(n.$$.fragment,p),f=D(p),l&&l.l(p),k=D(p),R(c.$$.fragment,p),N=D(p),R(d.$$.fragment,p),p.forEach(w),a.forEach(w),this.h()},h(){A(g,"class","govuk-grid-column-one-quarter"),A(r,"class","govuk-grid-column-three-quarters"),A(i,"class","govuk-grid-row"),te(i,"margin","1em")},m(e,a){se(e,i,a),u(i,g),j(o,g,null),u(i,_),u(i,r),j(n,r,null),u(r,f),l&&l.m(r,null),u(r,k),j(c,r,null),u(r,N),j(d,r,null),m=!0},p(e,[a]){const S={};a&1&&(S.currentIdx=e[0]),o.$set(S);const p={};a&1&&(p.idx=e[0]),n.$set(p),l&&l.p&&(!m||a&16)&&Z(l,z,e,e[4],m?ee(z,e[4],a,null):x(e[4]),null);const b={};!h&&a&3&&(h=!0,b.existingValue=e[1].streetPlacemakingCheck.existingScores[e[0]-1],I(()=>h=!1)),!P&&a&3&&(P=!0,b.proposedValue=e[1].streetPlacemakingCheck.proposedScores[e[0]-1],I(()=>P=!1)),!$&&a&3&&($=!0,b.existingNotes=e[1].streetPlacemakingCheck.existingScoreNotes[e[0]-1],I(()=>$=!1)),!t&&a&3&&(t=!0,b.proposedNotes=e[1].streetPlacemakingCheck.proposedScoreNotes[e[0]-1],I(()=>t=!1)),c.$set(b);const J={};a&1&&(J.idx=e[0]),d.$set(J)},i(e){m||(V(o.$$.fragment,e),V(n.$$.fragment,e),V(l,e),V(c.$$.fragment,e),V(d.$$.fragment,e),m=!0)},o(e){v(o.$$.fragment,e),v(n.$$.fragment,e),v(l,e),v(c.$$.fragment,e),v(d.$$.fragment,e),m=!1},d(e){e&&w(i),Q(o),Q(n),l&&l.d(e),Q(c),Q(d)}}}function le(s,i,g){let o;oe(s,y,t=>g(1,o=t));let{$$slots:_={},$$scope:r}=i,{idx:n}=i,{cases:f}=i,k=f.map(([t,N])=>[t,N,L[t].background,L[t].font]);function c(t){s.$$.not_equal(o.streetPlacemakingCheck.existingScores[n-1],t)&&(o.streetPlacemakingCheck.existingScores[n-1]=t,y.set(o))}function h(t){s.$$.not_equal(o.streetPlacemakingCheck.proposedScores[n-1],t)&&(o.streetPlacemakingCheck.proposedScores[n-1]=t,y.set(o))}function P(t){s.$$.not_equal(o.streetPlacemakingCheck.existingScoreNotes[n-1],t)&&(o.streetPlacemakingCheck.existingScoreNotes[n-1]=t,y.set(o))}function $(t){s.$$.not_equal(o.streetPlacemakingCheck.proposedScoreNotes[n-1],t)&&(o.streetPlacemakingCheck.proposedScoreNotes[n-1]=t,y.set(o))}return s.$$set=t=>{"idx"in t&&g(0,n=t.idx),"cases"in t&&g(3,f=t.cases),"$$scope"in t&&g(4,r=t.$$scope)},[n,o,k,f,r,_,c,h,P,$]}class Ne extends ne{constructor(i){super(),ie(this,i,le,ce,X,{idx:0,cases:3})}}export{Ne as Q};
